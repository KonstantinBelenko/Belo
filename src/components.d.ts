/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface BeloBadge {
        "counter": any;
    }
    interface BeloBox {
        "alignContent": string;
        "alignItems": string;
        "bg": string;
        "borderColor": string;
        "borderStyle": string;
        "borderWidth": string;
        "color": string;
        "display": string;
        "fd": string;
        "fw": string;
        "gap": string;
        "h": string;
        "justifyContent": string;
        "m": string;
        "p": string;
        "rounded": string;
        "shadow": string;
        "w": string;
    }
    interface BeloButton {
        "disabled": boolean;
        "pill": boolean;
        "variant": string;
    }
    interface BeloCaption {
        "align": 'left' | 'right' | 'center';
    }
    interface BeloCard {
        "content": any;
        "footer": any;
        "header": any;
        "image": any;
    }
    interface BeloFlex {
        "alignContent": 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' | 'space-evenly' | 'stretch';
        "alignItems": 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch';
        "direction": 'row' | 'column';
        "gap": string;
        "justifyContent": 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' | 'space-evenly';
        "wrap": 'wrap' | 'nowrap';
    }
    interface BeloHeader {
        "align": 'left' | 'right' | 'center';
        "size": any;
    }
    interface BeloInput {
        "disabled": boolean;
        "hint": boolean;
        "hinttext": any;
        "label": any;
        "placeholder": any;
        "required": boolean;
    }
    interface BeloLink {
        "link": any;
    }
    interface BeloP {
        "align": 'left' | 'right' | 'center';
    }
    interface BeloStack {
        "direction": 'row' | 'column';
        "gap": string;
    }
    interface BeloTextArea {
        "disabled": boolean;
        "maxlength": any;
        "placeholder": any;
    }
}
declare global {
    interface HTMLBeloBadgeElement extends Components.BeloBadge, HTMLStencilElement {
    }
    var HTMLBeloBadgeElement: {
        prototype: HTMLBeloBadgeElement;
        new (): HTMLBeloBadgeElement;
    };
    interface HTMLBeloBoxElement extends Components.BeloBox, HTMLStencilElement {
    }
    var HTMLBeloBoxElement: {
        prototype: HTMLBeloBoxElement;
        new (): HTMLBeloBoxElement;
    };
    interface HTMLBeloButtonElement extends Components.BeloButton, HTMLStencilElement {
    }
    var HTMLBeloButtonElement: {
        prototype: HTMLBeloButtonElement;
        new (): HTMLBeloButtonElement;
    };
    interface HTMLBeloCaptionElement extends Components.BeloCaption, HTMLStencilElement {
    }
    var HTMLBeloCaptionElement: {
        prototype: HTMLBeloCaptionElement;
        new (): HTMLBeloCaptionElement;
    };
    interface HTMLBeloCardElement extends Components.BeloCard, HTMLStencilElement {
    }
    var HTMLBeloCardElement: {
        prototype: HTMLBeloCardElement;
        new (): HTMLBeloCardElement;
    };
    interface HTMLBeloFlexElement extends Components.BeloFlex, HTMLStencilElement {
    }
    var HTMLBeloFlexElement: {
        prototype: HTMLBeloFlexElement;
        new (): HTMLBeloFlexElement;
    };
    interface HTMLBeloHeaderElement extends Components.BeloHeader, HTMLStencilElement {
    }
    var HTMLBeloHeaderElement: {
        prototype: HTMLBeloHeaderElement;
        new (): HTMLBeloHeaderElement;
    };
    interface HTMLBeloInputElement extends Components.BeloInput, HTMLStencilElement {
    }
    var HTMLBeloInputElement: {
        prototype: HTMLBeloInputElement;
        new (): HTMLBeloInputElement;
    };
    interface HTMLBeloLinkElement extends Components.BeloLink, HTMLStencilElement {
    }
    var HTMLBeloLinkElement: {
        prototype: HTMLBeloLinkElement;
        new (): HTMLBeloLinkElement;
    };
    interface HTMLBeloPElement extends Components.BeloP, HTMLStencilElement {
    }
    var HTMLBeloPElement: {
        prototype: HTMLBeloPElement;
        new (): HTMLBeloPElement;
    };
    interface HTMLBeloStackElement extends Components.BeloStack, HTMLStencilElement {
    }
    var HTMLBeloStackElement: {
        prototype: HTMLBeloStackElement;
        new (): HTMLBeloStackElement;
    };
    interface HTMLBeloTextAreaElement extends Components.BeloTextArea, HTMLStencilElement {
    }
    var HTMLBeloTextAreaElement: {
        prototype: HTMLBeloTextAreaElement;
        new (): HTMLBeloTextAreaElement;
    };
    interface HTMLElementTagNameMap {
        "belo-badge": HTMLBeloBadgeElement;
        "belo-box": HTMLBeloBoxElement;
        "belo-button": HTMLBeloButtonElement;
        "belo-caption": HTMLBeloCaptionElement;
        "belo-card": HTMLBeloCardElement;
        "belo-flex": HTMLBeloFlexElement;
        "belo-header": HTMLBeloHeaderElement;
        "belo-input": HTMLBeloInputElement;
        "belo-link": HTMLBeloLinkElement;
        "belo-p": HTMLBeloPElement;
        "belo-stack": HTMLBeloStackElement;
        "belo-text-area": HTMLBeloTextAreaElement;
    }
}
declare namespace LocalJSX {
    interface BeloBadge {
        "counter"?: any;
    }
    interface BeloBox {
        "alignContent"?: string;
        "alignItems"?: string;
        "bg"?: string;
        "borderColor"?: string;
        "borderStyle"?: string;
        "borderWidth"?: string;
        "color"?: string;
        "display"?: string;
        "fd"?: string;
        "fw"?: string;
        "gap"?: string;
        "h"?: string;
        "justifyContent"?: string;
        "m"?: string;
        "p"?: string;
        "rounded"?: string;
        "shadow"?: string;
        "w"?: string;
    }
    interface BeloButton {
        "disabled"?: boolean;
        "pill"?: boolean;
        "variant"?: string;
    }
    interface BeloCaption {
        "align"?: 'left' | 'right' | 'center';
    }
    interface BeloCard {
        "content"?: any;
        "footer"?: any;
        "header"?: any;
        "image"?: any;
    }
    interface BeloFlex {
        "alignContent"?: 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' | 'space-evenly' | 'stretch';
        "alignItems"?: 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch';
        "direction"?: 'row' | 'column';
        "gap"?: string;
        "justifyContent"?: 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' | 'space-evenly';
        "wrap"?: 'wrap' | 'nowrap';
    }
    interface BeloHeader {
        "align"?: 'left' | 'right' | 'center';
        "size"?: any;
    }
    interface BeloInput {
        "disabled"?: boolean;
        "hint"?: boolean;
        "hinttext"?: any;
        "label"?: any;
        "placeholder"?: any;
        "required"?: boolean;
    }
    interface BeloLink {
        "link"?: any;
    }
    interface BeloP {
        "align"?: 'left' | 'right' | 'center';
    }
    interface BeloStack {
        "direction"?: 'row' | 'column';
        "gap"?: string;
    }
    interface BeloTextArea {
        "disabled"?: boolean;
        "maxlength"?: any;
        "placeholder"?: any;
    }
    interface IntrinsicElements {
        "belo-badge": BeloBadge;
        "belo-box": BeloBox;
        "belo-button": BeloButton;
        "belo-caption": BeloCaption;
        "belo-card": BeloCard;
        "belo-flex": BeloFlex;
        "belo-header": BeloHeader;
        "belo-input": BeloInput;
        "belo-link": BeloLink;
        "belo-p": BeloP;
        "belo-stack": BeloStack;
        "belo-text-area": BeloTextArea;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "belo-badge": LocalJSX.BeloBadge & JSXBase.HTMLAttributes<HTMLBeloBadgeElement>;
            "belo-box": LocalJSX.BeloBox & JSXBase.HTMLAttributes<HTMLBeloBoxElement>;
            "belo-button": LocalJSX.BeloButton & JSXBase.HTMLAttributes<HTMLBeloButtonElement>;
            "belo-caption": LocalJSX.BeloCaption & JSXBase.HTMLAttributes<HTMLBeloCaptionElement>;
            "belo-card": LocalJSX.BeloCard & JSXBase.HTMLAttributes<HTMLBeloCardElement>;
            "belo-flex": LocalJSX.BeloFlex & JSXBase.HTMLAttributes<HTMLBeloFlexElement>;
            "belo-header": LocalJSX.BeloHeader & JSXBase.HTMLAttributes<HTMLBeloHeaderElement>;
            "belo-input": LocalJSX.BeloInput & JSXBase.HTMLAttributes<HTMLBeloInputElement>;
            "belo-link": LocalJSX.BeloLink & JSXBase.HTMLAttributes<HTMLBeloLinkElement>;
            "belo-p": LocalJSX.BeloP & JSXBase.HTMLAttributes<HTMLBeloPElement>;
            "belo-stack": LocalJSX.BeloStack & JSXBase.HTMLAttributes<HTMLBeloStackElement>;
            "belo-text-area": LocalJSX.BeloTextArea & JSXBase.HTMLAttributes<HTMLBeloTextAreaElement>;
        }
    }
}
